// Simple (and rather pointless) example of how to implement a custom modname()
// function; a more sophisticated version of this might allow things like
// searching for modules in a library directory.

include "inc/cmdsys.plh"
include "inc/cmdsysac.plh"

// There's no requirement to chain modname() functions, but let's demonstrate
// that it's possible if desired.
word parent_modname

def putcr(cr)#0
    word i
    i = cr
    while ^i <> 13
        putc(^i)
        i++
    loop
end

def my_modname(modcr)#0
    word i
    puts("modname before: ")
    putcr(modcr)
    putln() 
    parent_modname(modcr)#0
    puts("modname after: ")
    putcr(modcr)
    putln()
end

// TODO: Some means of preventing this being installed over and over again
// (burning memory each time) might be nice, but as far as I can see upstream
// PLASMA doesn't support this and I am not sure it's a good idea to make
// Acorn-specific changes here. Now that modules have their address in the
// symbol table, can we use that to help?
parent_modname = modname
modname = @my_modname
puts("Installed my_modname()\n")
return modkeep
done
