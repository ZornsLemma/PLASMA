include "inc/cmdsys.plh"
include "inc/acornc.plh"

const eof = -1 // TODO: keep this? not sure

asm equates
    BBC = 1
    !SOURCE "vmsrc/plvmzp.inc"
    osbput = $FFD4 ; TODO: need to centralise these for assembler
    osbget = $FFD7
end

// void call_osbput(byte c, int handle)
export asm call_osbput
    LDA ESTKL+1,X
    LDY ESTKL,X
    INX
    JMP osbput
end

// int call_osbget(int handle) - returns byte read or eof (-1)
export asm call_osbget
    LDY ESTKL,X
    JSR osbget
    LDY #0
    BCC NOTEOF
    DEY
    TYA
NOTEOF
    STA ESTKL,X
    STY	ESTKH,X
    RTS
end


def call_osfind_open_internal(a, filename, filename_cr)
    stocr(filename, filename_cr)
    return call(a, filename_cr, filename_cr >> 8, 0, osfind).0
end

export def call_osfind_open(a, filename)
    return callalloca(a, filename, @call_osfind_open_internal, ^filename + 1)
end

export def call_osrdch()
    return call(0, 0, 0, 0, osrdch).0
end

// vi: sts=4 sw=4
