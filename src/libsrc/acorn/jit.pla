//
// PLASMA JIT bytecode compiler
//
include "inc/cmdsys.plh"
//
// Indirect interpreter DEFinition entrypoint
//
struc t_defentry
    byte interpjsr
    word interpaddr
    word bytecodeaddr
    byte callcount
    byte bytecodesize
end
// SFTODO: QUITE A BIT OF DUPLICATION BETWEEN THIS AND JIT128.PLA, FACTOR IT OUT
//
// JIT compiler constants
//
// SFTODO TEMP NOTE - ACORN HAS ESTKH AT $50, ESTKL AT $60 - APPLE HAS ESTKH AT
// $C0, ESTKL AT $D0
const estkh8 = $5000
const estkh = $50
const estkl8 = $6000
const estkl = $60
// SFTODO TEMP NOTE - APPLE HAS IFPL AT $E0, IFPH AT $E1 - ACORN HAS IFPL AT $71, IFPH AT $72
const ifpl8 = $7100
const ifph8 = $7200
// SFTODO TEMP NOTE - ACORN TMPL IS $76, TMPH IS $77
// SFTODO TEMP NOTE - APPLE TMPL IS $E7, TMPH IS $E8
const tmpl8 = $7600
const tmph8 = $7700
// SFTODO TEMP NOTE - APPLE JMPTMP IS $E6
// SFTODO TEMP NODE - ACORN JMPTMP IS NOT AT A FIXED LOCATION (MAYBE I SHOULD
// JUST MAKE IT BE AND GET THE PAIN OVER WITH) BUT FOR NOW WE'LL HACK ONE IN IN
// OUR INIT
const jmptmp = $412

const jitcomp     = $0409
const jitcodeptr  = $040B
const codemax     = $F700 // SFTODO: PROBABLY 256 BYTES OF SAFETY MARGIN TO AVOID OVERWRITING TUBE "ROM" IS EXCESSIVE, BUT STICK WITH IT FOR NOW
//
// Bytecode interpreter entrypoints
//
// SFTODO: I HAD TO HACK THESE TO BE NON-CONST
word indirectentry
word directentry
//
// Copy bytecode DEF to main memory
//
def defcpy(dst, defptr)#0
    memcpy(dst, defptr=>bytecodeaddr, defptr->bytecodesize)
end
include "libsrc/jitcore.pla"
//
// Install JIT compiler
//
if *jitcomp
    return 0
fin
*jitcomp        = @compiler
// SFTODO: WE *MIGHT* BE ABLE TO INITIALISE JITCODE(PTR) HERE INSTEAD OF DOING
// IT IN THE MACHINE CODE VM, AND/OR IT MIGHT BE BEST IF CMD.PLA DID IT (IT HAS
// ACCESS TO THE XHEAP PTR CONVENIENTLY)
cmdsys.jitcount = 44
cmdsys.jitsize  = 96
directentry   = *$0415 // SFTODO: HACK
// jitcore.pla uses indirectentry on bytecode definitions it is unable or
// unwilling to compile; on the flat model used in PLASMA we actually need to
// use directentry for these. The name is unfortunate but not terrible and
// jitcore.pla is common to all ports so we can't easily rename this.
indirectentry = directentry 
^jmptmp = $6C; *(jmptmp + 1) = $76 // SFTODO: HACK
puts("JITC enabled\n")
puth(*jitcomp) // SFTODO TEMP
return modkeep
done
