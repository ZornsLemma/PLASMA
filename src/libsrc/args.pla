include "inc/cmdsys.plh"
sysflags nojitc // No need to speed this up

def argDelim(str)
    byte n
    
    puts("PRESKIP str="); puth(str); puts(" ^str="); puti(^str); putln()
    // Skip leading spaces
     while ^str and ^(str + 1) == ' '
        ^(str + 1) = ^str - 1
        str++
    loop
    puts("POSTSKIP str="); puth(str); puts(" ^str="); puti(^str); putln()
    // Scan to trailing spaces (if any)
    for n = 1 to ^str
        if ^(str + n) <= ' '
            ^(str + n) = ^str - n
            ^str       = n - 1
            break
        fin
    next
    puts("ARGDELIM() RETURNED |"); puth(str); puts("|"); puti(^str); putc('|'); puts(str); putc('|'); putln()
    return str
end

export def argNext(str)
    str = str + ^str + 1
    return argDelim(str)
end

// SFTODO: WOULD BE GOOD TO WRITE AN ARGTEST.PLA (PUT IT IN SAMPLESRC) WHICH DUMPS OUT THE ARGUMENTS WITH THEIR ACCOMPANYING INDEXES. IDEALLY WOULD ALSO RUN THE SAME PROGRAM ON APPLE II VM TO CONFIRM BEHAVIOUR. I AM PRETTY SURE ARGFIRST RETURNS THE MODULE NAME (AFTER THE "+", THAT IS), NOT THE "FIRST" ARGUMENT AFTER IT

// SFTODO: FWIW MY READING OF THE APPLE II CODE AT $FD6A AND THE APPLE rdstr() (=gets()) SUGGESTS THAT THERE IS A TRAILING $0D WHICH IS NOT INCLUDED IN THE PLASMA STRING AT $1FF IT RETURNS, BUT WHICH *DOES* RELIABLY LIVE IN THE FIRST BYTE AFTER THE PLASMA STRING - THIS MAY OR MAY NOT BE RELEVANT, BUT MAKING A NOTE NOW I'VE WORKED THIS OUT
// SFTODO: AND IT LOOKS LIKE OSWORD 0 BEHAVES VERY SIMILARLY - AS PER BEEBWIKI, LINE LENGTH RETURNED IN Y EXCLUDES CR, *BUT* (AT LEAST ON OS 3.20 AND PROB ON ALL MACHINES) THERE IS A &D BYTE IN THE BUFFER IMMEDIATELY AFTER THE Y CHARACTERS (INDEXES 0 TO Y-1, SO CR IS AT INDEX Y)
export def argFirst
    // SFTODO: I THINK WHAT I HAVE *WORKS* BUT IT MAKES NO SENSE - IF YOU RUN "+PLASM" (INVALID, NO TAIL) AND "+PLASM TEST.PLA" (VALID) THE OUTPUT OF THE NEXT 'Z' LINE IS THE SAME, YET THE EXPECTED BEHAVIOUR OCCURS! I SUSPECT A SIDE ISSUE IS THE SUBTLE INCORRECTNESS WE SEE WHEN DEALING WITH "*PLASMA +TEST.PLA" - I HAVE HACKED ROUND THIS (TO PROVE SOMETHING) BY FORCING A CR (13) IN THE "IRRELEVANT" BYTE AFTER THE COMMAND TAIL, TO MATCH WHAT HAPPENS WITH GETS() DUE TO THE WAY OSWORD 0 WORKS
    // - BUT WE SHOULDNT CARE ABOUT THAT
    putc('Z'); puts(cmdsys:cmdline); putc('Z'); putln() // SFTODO!
    // SFTODO: I HAVE (PROBABLY) TEMPORARILY RELOCATED THIS CODE INTO BBCMD.PLA,
    // TO AVOID HAVING TO COPY THE CMDLINE - THERE ARE OTHER APPROACHES I CAN
    // USE, THIS WAS EXPEDIENT
    ^(cmdsys:cmdline + ^cmdsys:cmdline + 1) = NULL
    return argDelim(cmdsys:cmdline)
end

done
